<?php

namespace Database\Factories;

use App\Models\User;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\OrchestratorConnectionTenantAlert>
 */
class OrchestratorConnectionTenantAlertFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition()
    {
        return [
            'creation_time' => fake(app()->getLocale())->dateTimeBetween('-60 days'),
            'notification_name' => 'Supervisor.Fake',
            'component' => 'Unknown',
            'severity' => rand(0, 1) ? 'Error' : 'Warn',
            'data' => json_encode('{ "Message": "This is a random alert generated by supervisor" }'),
        ];
    }

    public function read()
    {
        $readAt = fake(app()->getLocale())->dateTimeBetween('-72 hours');

        return $this->state(function (array $attributes) use ($readAt) {    
            $resolutionTimeInSeconds = Carbon::parse(Carbon::instance($readAt))
                ->diffInSeconds(Carbon::instance($attributes['creation_time']));

            return [
                'resolution_details' => fake(app()->getLocale())->paragraph(),
                'read_by' => User::find(1),
                'read_at' => $readAt,
                'resolution_time_in_seconds' => $resolutionTimeInSeconds,
            ];
        });
    }

    public function becauseOfJobFaulted()
    {
        return $this->state(function (array $attributes) {
            return [
                'notification_name' => 'Process.JobExecution.Faulted',
                'component' => 'Jobs',
                'severity' => 'Error',
                'data' => json_encode('{"JobId":128987691,"RobotId":76596,"RobotName":"production robot-unattended","ProcessName":"Scan car damage statements","Info":"This is a job faulted alertrnrnSystem.Activities.Statements.WorkflowTerminatedException: This is a job faulted alert","State":4,"ReportingInterval":null,"JobsCountInBatch":null,"ReportingTime":"2022-12-15T15:38:50.8361507Z","Message":"Folder EMEA/FR/INS: #job for #process Scan car damage statements on #robot production robot-unattended failed. (#1680)","MessageErrorCode":1680,"FolderId":1965696,"FolderFullyQualifiedName":"EMEA/FR/INS","ForceDisplay":false,"Type":"UiPath.Orchestrator.Core.Alerts.Model.JobStatusNotificationData","Properties":{}}'),
            ];
        });
    }

    public function becauseOfQueueItemTransactionFailedAppException()
    {
        return $this->state(function (array $attributes) {
            return [
                'notification_name' => 'Queue.TransactionStatus.FailedWithApplicationException',
                'component' => 'Transactions',
                'severity' => 'Error',
                'data' => json_encode('{"ProcessingExceptionType":"ApplicationException","ProcessingExceptionTypeValue":1,"QueueItemId":402245117,"ItemKey":"e21f523e-8e6a-4321-88cd-b8079165f4ff","QueueId":166009,"QueueName":"Car damage statements","RobotName":null,"RobotId":null,"Reason":"This is an application exception","Details":"Details ...","AssociatedImageFilePath":null,"ReportingTime":"2022-12-11T21:35:36.203Z","Message":"Folder EMEA/FR/INS: #transaction from #queue Car damage statements on #robot  failed with application exception.","MessageErrorCode":null,"FolderId":1965696,"FolderFullyQualifiedName":"EMEA/FR/INS","ForceDisplay":false,"Type":"UiPath.Orchestrator.Core.Alerts.Model.QueueTransactionStatusNotificationData","Properties":{}}'),
            ];
        });
    }

    public function becauseOfQueueItemTransactionFailedBizException()
    {
        return $this->state(function (array $attributes) {
            return [
                'notification_name' => 'Queue.TransactionStatus.FailedWithBusinessException',
                'component' => 'Transactions',
                'severity' => 'Warn',
                'data' => json_encode('{"ProcessingExceptionType":"BusinessException","ProcessingExceptionTypeValue":1,"QueueItemId":402245117,"ItemKey":"e21f523e-8e6a-4321-88cd-b8079165f4ff","QueueId":166009,"QueueName":"Car damage statements","RobotName":null,"RobotId":null,"Reason":"This is a business exception","Details":"Details ...","AssociatedImageFilePath":null,"ReportingTime":"2022-12-11T21:35:36.203Z","Message":"Folder EMEA/FR/INS: #transaction from #queue Car damage statements on #robot  failed with business exception.","MessageErrorCode":null,"FolderId":1965696,"FolderFullyQualifiedName":"EMEA/FR/INS","ForceDisplay":false,"Type":"UiPath.Orchestrator.Core.Alerts.Model.QueueTransactionStatusNotificationData","Properties":{}}'),
            ];
        });
    }

    public function randomError()
    {
        return $this->state(function (array $attributes) {
            return [
                'notification_name' => 'Supervisor.Fake',
                'severity' => 'Error',
                'data' => json_encode('{ "Message": "This is a random error alert generated by supervisor" }'),
            ];
        });
    }

    public function randomWarn()
    {
        return $this->state(function (array $attributes) {
            return [
                'notification_name' => 'Supervisor.Fake',
                'severity' => 'Warn',
                'data' => json_encode('{ "Message": "This is a random warn alert generated by supervisor" }'),
            ];
        });
    }
}
